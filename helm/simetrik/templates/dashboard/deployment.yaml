apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.dashboard.name }}
  labels:
    {{- include "simetrik.dashboard.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.dashboard.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.dashboard.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        "karpenter.sh/do-not-evict": "false"
    spec:
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfied: {{ .Values.server.topologySpread.whenUnsatisfied | default "DoNotSchedule" }}
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ .Values.dashboard.name }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ .Values.dashboard.name }}
                topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Values.dashboard.name }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          ports:
            {{- range .Values.dashboard.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          env:
            - name: SERVER_HOST
              value: "{{ .Values.server.name }}"
            - name: SERVER_PORT
              value: "{{ .Values.server.service.port }}"
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 30
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
